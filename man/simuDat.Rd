% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simuDat.R
\name{simuDat}
\alias{simuDat}
\title{Generate a simulated data set from a GLMM model with non-random dropout}
\usage{
simuDat(
  B,
  G,
  random = NULL,
  p_exposed = 0.5,
  p_confounder = 0.25,
  conf = 0.2,
  N = 100,
  M = 10,
  D_B,
  D_F = c(1, 1, 1, 1, 1),
  D_parms = c(1, 1)
)
}
\arguments{
\item{B:}{numeric vector of fixed effect betas (intercept, time, exposure (0/1), time*exposure, confounder)}

\item{G:}{random variance matrix}

\item{random:}{character vector of random variables, if NULL just an intercept}

\item{p_exposed:}{scalar proportion with exposure}

\item{p_confounder:}{proportion of subjects with the confounding effect}

\item{conf:}{scalar confounder effect on exposure as proportion increase percent with exposure}

\item{N:}{number of subjects}

\item{M:}{number of measurement points after baseline}

\item{D_B:}{numeric vector of dropout betas (intercept, time, exposure (0/1), time*exposure, confounder)}

\item{D_F:}{numeric vector indicating dropout functions applied to each effect (intercept, time, exposure (0/1), time*exposure, confounder). 1 = linear, 2 = -exp()}

\item{D_parms:}{(shape, scale) for the beta distribution for dropout. To specify a different dropout pattern for exposed specify a 2 element list
of parameters: list(c(1,1), c(3, 5)). Element 1 will be used for the unexposed, element 2 for the exposed.}
}
\value{
Output:
\itemize{
\item data frame of \eqn{N \cdot M} rows with the following columns:
\item id: numeric subject ID
\item exposure: (0/1) indicator of exposure status
\item confounder: (0/1) indicator of confounding effect
\item time: time since baseline
\item time_exp: time by exposure interaction
\item dtime: last time point with follow up
\item y: outcome
}

By default, the complete data are included.To obtain the MNAR afflicted data:

fullDat <- simuDat( your specifications here )

mnarDat <- subset(fullDat, time <= dtime)
}
\description{
Generate a simulated data set from a GLMM model with non-random dropout. For N subjects (indexed by \eqn{i}),
each with \eqn{M} measurements (indexed by \eqn{j}), The model has the following form:
\deqn{f(y_{ij}|b_i)=\beta_0+\beta_1t_{ij}+\beta_2x_i+\beta_3t_{if}x_i+\beta_4c_i+
\beta_d(d_i)+\beta_t(d_i)t_{ij}+\beta_x(d_i)x_i+\beta_{tx}(d_i)t_{ij}x_i+\beta_c(d_i)c_i+
Z_ib_i
}

Where:
\itemize{
\item \eqn{f()} s the logit transform
\item \eqn{y_{ij}} is a 0/1 indicator of an outcome
\item \eqn{b_i} is a vector of random coefficients, assumed to be normally distributed
\item \eqn{Z_i} is the design matrix of random effects
\item \eqn{\beta_k} are fixed model parameters
\item \eqn{\beta_l(d_i)} are functions of dropout time (\eqn{d_i})
\item \eqn{t_{ij}} is time since baseline for participant \eqn{i} at measure \eqn{j}
\item \eqn{x_i} is the exposure status of participant \eqn{i}, (0/1)
\item \eqn{c_i} is the status of the \eqn{i^{th}} participant for a confounding effect for exposure
}

Note that when an effect is independent of time the \eqn{j} subscript is suppressed, for clarity.

When designing the dropout pattern, any fixed effect may be chosen to be associated with dropout time. Further, choice of association
need not be the same for all effects.

Random coefficients can be defined for all fixed effects (in the random argument). Take care that the dimension of G
is appropriate for your selection.

Last follow up visit is determined starting at the first follow up using a beta binomial distribution with \eqn{p\sim Beta(\alpha_1,\alpha_2)}
and \eqn{d_i\sim Binomial(M-1, p)+1}. Both study time and dropout time are divided by \eqn{M} so they are between zero and one.
}
\examples{
set.seed(058475869)
fullData <- simuDat(
                B = c(-2, -0.05, 1, 0.1, 1.2), 
                G = matrix(c(1, 0.1, 0.1, 0.5), 2, 2),
                random= 'time',
                p_exposed = 0.5,
                p_confounder = 0.25,
                conf = 0.2,
                D_B = c(0, -4, 0, 0, 0),
                D_F = c(1, 1, 1, 1, 1),
                D_parms = c(1, 1),
                N = 1000,
                M = 5
                )
mnarData <- subset(fullData, time <= dtime)

}
